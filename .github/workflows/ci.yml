name: BCDT-CI

on:
  push:
    branches: [ protype ]
  pull_request:
    branches: [ prototype ]
#  schedule:
#    - cron '0 2 * * *'

jobs:

  lint_and_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run linting script
        run: ./ci/linter.sh

  unit_tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [ '3.7', '3.8', '3.9' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Get pip cache dir
        id: cache-dir
        run: |
          echo ::set-output name=dir::$(pip cache dir)

      - name: Cache pip dependencies
        uses: actions/cache@v2
        id: cache-pip
        with:
          path: ${{ steps.cache-dir.outputs.dir }}
          key: ${{ runner.os }}-tests-${{ hashFiles('requirements/tests-requirements.txt') }}

      - name: Install dependencies
        run: ./ci/install_test_deps.sh.cmd

      - name: Run unit tests
        if: ${{ matrix.os != 'windows-latest' }}
        run: pytest tests

      - name: Run unit tests (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          pytest tests/unit --cov=bentoml --cov-config=setup.cfg --cov-report=xml:"unit.xml"


